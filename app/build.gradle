apply plugin: Plugins.androidApplication
apply plugin: Plugins.kotlinAndroid
apply plugin: Plugins.kotlinKapt
apply plugin: Plugins.googleServices
apply plugin: Plugins.firebaseCrashlytics
apply plugin: Plugins.safeArgs
apply plugin: 'kotlin-android'


Properties localConfig = new Properties()

android {
    compileSdkVersion Apps.compileSdk
    buildToolsVersion Apps.buildTools

    defaultConfig {
        applicationId Apps.applicationId
        minSdkVersion Apps.minSdk
        targetSdkVersion Apps.targetSdk
        versionCode Apps.versionCode
        versionName Apps.versionName

        testInstrumentationRunner TestLibs.instrumentationRunner
    }
    signingConfigs {
        release {
            if (System.getenv()["CI"]) {
                if (System.getenv()["FCI_KEYSTORE_PATH"] != null) {
                    storeFile file(System.getenv()["FCI_KEYSTORE_PATH"])
                }
                if (System.getenv()["FCI_KEYSTORE_PASSWORD"] != null) {
                    storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                }
                if (System.getenv()["FCI_KEY_ALIAS"] != null) {
                    keyAlias System.getenv()["FCI_KEY_ALIAS"]
                }
                if (System.getenv()["FCI_KEY_PASSWORD"] != null) {
                    keyPassword System.getenv()["FCI_KEY_PASSWORD"]
                }
            } else {
                localConfig.load(project.rootProject.file('config/config_release.properities').newDataInputStream())
                storeFile file('../config/yetanothernotes_release.jks')
                storePassword localConfig['release.keystorePassword']
                keyAlias localConfig['release.keyAlias']
                keyPassword localConfig['release.keyPassword']
            }
        }
    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
//    buildFeatures {
//        viewBinding true
//    }
}

dependencies {
    implementation Libs.kotlin
    implementation Libs.androidX.core
    implementation Libs.androidX.appcompat
    implementation Libs.androidX.constraintLayout
    implementation Libs.androidX.navigationFragment
    implementation Libs.androidX.navigationUi
    implementation Libs.androidX.navigationFragmentKtx
    implementation Libs.androidX.navigationUiKtx
    implementation Libs.androidX.navigationFeatureModuleSupport
    implementation Libs.androidX.navigationCompose
    implementation Libs.androidMaterial

    // firebase
    implementation platform(Libs.firebaseBom)
    implementation Libs.firebaseAnalyticsKtx
    implementation Libs.firebaseCrashlyticsKtx

    // timber
    implementation Libs.timber
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    // tests
    testImplementation TestLibs.junit
    androidTestImplementation TestLibs.extJunit
    androidTestImplementation TestLibs.espresso
    androidTestImplementation TestLibs.navigation
}